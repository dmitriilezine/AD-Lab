{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "windowsImagePublisher": {
      "type": "string",
      "metadata": {
        "description": "The Publisher of Windows Image"
      },
      "defaultValue": "MicrosoftWindowsServer"
    },
    "windowsImageOffer": {
      "type": "string",
      "metadata": {
        "description": "The offer of Windows Image"
      },
      "defaultValue": "WindowsServer"
    },
    "windowsImageSKU": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "The SKU Name of Windows Image"
      },
      "defaultValue": "2016-Datacenter"
    },
    "windowsImageVersion": {
      "type": "string",
      "metadata": {
        "description": "The Version of Windows Image"
      },
      "defaultValue": "latest"
    },
    "dataDiskSize": {
      "type": "int",
      "metadata": {
        "description": "Size of the VM data disk in GB"
      },
      "defaultValue": 2
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The VM Name"
      }
    },
    "storageAccount": {
      "type": "string",
      "metadata": {
        "description": "The Storage Account Name"
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the AD VMs Created"
      },
      "defaultValue": "Standard_A2"
    },
    "subnetResourceID": {
      "type": "string",
      "metadata": {
        "description": "the resource id of the subnet"
      }
    },
    "adDNicName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Nic attached to the ad VM"
      }
    },
    "primaryAdIpAddress": {
      "type": "string",
      "metadata": {
        "description": "PrimaryIPAddress if AD VM"
      }
    },
    "assetLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources that the script is dependent on such as linked templates and DSC modules"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The domain name"
      }
    }
  },
  "variables": {
    "vmvhdContainerName": "vhds",
    "dscModulesURL": "[concat(parameters('assetLocation'),'/data/DomainJoin.zip')]",
    "dscConfigurationFunction": "DomainJoin.ps1\\DomainJoin"
  },
  "resources": [
    {
      "name": "[parameters('storageAccount')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "name": "[parameters('adDNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-05-01-preview",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('primaryAdIpAddress')]",
              "subnet": {
                "id": "[parameters('subnetResourceID')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccount'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',parameters('adDNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('windowsImagePublisher')]",
            "offer": "[parameters('windowsImageOffer')]",
            "sku": "[parameters('windowsImageSKU')]",
            "version": "[parameters('windowsImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccount')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob ,variables('vmvhdContainerName'),'/', parameters('vmName'), '0','-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('adDNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "[concat(parameters('vmName'),'/DomainJoin')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": "true",
            "settings": {
              "modulesUrl": "[variables('dscModulesURL')]",
              "configurationFunction": "[variables('dscConfigurationFunction')]",
              "properties": {
                "domainName": "[parameters('domainName')]",
                "adminCreds": {
                  "userName": "[parameters('adminUserName')]",
                  "password": "PrivateSettingsRef:adminPassword"
                }
              }
            },
            "protectedSettings": {
              "items": {
                "adminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ],
    }
  ],
  "outputs": {}
}