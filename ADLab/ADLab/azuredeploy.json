{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "domainName": {
      "type": "string",
      "allowedValues": [
        "contoso.com"
      ],
      "metadata": {
        "description": "The domain name needs to be consisting of one or more labels separated by . E.g. contoso.com"
      },
      "defaultValue": "contoso.com"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      },
      "defaultValue": "labadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain. If you do not change it, then it will look like this: Subscription#SUBSCRIPTIONID"
      },
      "defaultValue": "[concat('Subscription#',subscription().subscriptionId)]"
    },
    "sourceClientIP": {
      "type": "string",
      "metadata": {
        "description": "Internet IP of the computer that will RDP into this lab. Change this to * to allow all Internet devices to brute force your lab or find out external IP or subnet for your device to lock down access to your lab from the Internet. Choice is yours."
      },
      "defaultValue": "127.0.0.1"
    },
    "DomainControllerImageSKU": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Choose OS type for Domain Controller"
      },
      "defaultValue": "2016-Datacenter"
    },
    "deployDC2": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "No",
        "Yes"
      ],
      "metadata": {
        "description": "Deploy second DC in ADDS"
      }
    },
    "DC2VMImageSKU": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Choose OS type for DC2 Server"
      },
      "defaultValue": "2016-Datacenter"
    },
    "deployC2": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "No",
        "Yes"
      ],
      "metadata": {
        "description": "VM is joined to ADDS"
      }
    },
    "C2VMImageSKU": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Choose OS type for C2 Server"
      },
      "defaultValue": "2016-Datacenter"
    },
    "deployATA": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "No",
        "Yes"
      ],
      "metadata": {
        "description": "VM is not joined to ADDS"
      }
    },
    "ATAVMImageSKU": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Choose OS type for ATA Server"
      },
      "defaultValue": "2016-Datacenter"
    },
    "deployVM1": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "No",
        "Yes"
      ],
      "metadata": {
        "description": "VM1 is joined to ADDS"
      }
    },
    "VM1VMImageSKU": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Choose OS type for VM1 Server"
      },
      "defaultValue": "2016-Datacenter"
    },
    "deployVM2": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "No",
        "Yes"
      ],
      "metadata": {
        "description": "VM2 is joined to ADDS"
      }
    },
    "VM2VMImageSKU": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Choose OS type for VM2 Server"
      },
      "defaultValue": "2016-Datacenter"
    },
    "deployLab1ViaScript": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "No",
        "Yes"
      ],
      "metadata": {
        "description": "For testing purposes only. You have to provide storage account key in the next field."
      }
    },
    "storageAccountKey": {
      "type": "securestring",
      "metadata": {
        "description": "Key to access the storage account"
      },
      "defaultValue": "Copy and Paste Storage Account Key Here"
    },
    "deployOUandUsersviaScript": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "No",
        "Yes"
      ],
      "metadata": {
        "description": "It will add 200+ user accounts, 20+ security groups and assigns them with all kind of different permissions. For testing purposes only."
      }
    },
    "deployOUandUsersviaDSC": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "No",
        "Net",
        "Nope",
        "Nada",
        "Ne nado",
        "Yes"
      ],
      "metadata": {
        "description": "Currently under development. DO NOT SELECT YES. If select Yes, it will try and fail to deploy OUs and a few user accounts into OUs"
      }
    },
    "deployLabViaKeyVault": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "No",
        "Yes"
      ],
      "metadata": {
        "description": "Unless you have access to the Key Vault, which you do not, don't select this option. It will fail."
      }
    }
  },
  "variables": {
    "assetLocation": "https://raw.githubusercontent.com/dmitriilezine/AD-Lab/master/ADLab/ADLab",
    "assetLocationStorageAccount": "https://crlab.blob.core.windows.net",
    "adVMSize": "Standard_A2",
    "adOSVersion": "[parameters('DomainControllerImageSKU')]",
    "dc2OSVersion": "[parameters('DC2VMImageSKU')]",
    "ataOSVersion": "[parameters('ATAVMImageSKU')]",
    "c2OSVersion": "[parameters('C2VMImageSKU')]",
    "vm1OSVersion": "[parameters('VM1VMImageSKU')]",
    "vm2OSVersion": "[parameters('VM2VMImageSKU')]",
    "vmNetworkSubnet": "10.0.0.0/24",
    "virtualNetworkAddressRange": "10.0.0.0/16",
    "primaryAdIpAddress": "10.0.0.4",
    "primaryDC2IpAddress": "10.0.0.5",
    "primaryATAIpAddress": "10.0.0.6",
    "primaryC2IpAddress": "10.0.0.7",
    "primaryVM1IpAddress": "10.0.0.8",
    "primaryVM2IpAddress": "10.0.0.9",
    "storageAccountType": "Standard_LRS",
    "adTemplateURLCloud": "[concat(variables('assetLocation'),'/data/adVmTemplate.json')]",
    "dc2TemplateURL": "[concat(variables('assetLocation'),'/data/dc2VmTemplate.json')]",
    "ataTemplateURL": "[concat(variables('assetLocation'),'/data/ataVmTemplate.json')]",
    "c2TemplateURL": "[concat(variables('assetLocation'),'/data/c2VmTemplate.json')]",
    "vm1TemplateURL": "[concat(variables('assetLocation'),'/data/vm1VmTemplate.json')]",
    "vm2TemplateURL": "[concat(variables('assetLocation'),'/data/vm2VmTemplate.json')]",
    "adStorageNameOLD": "[tolower(concat('adsa',resourceGroup().name))]",
    "adStorageName": "[tolower(concat('dc1', uniqueString(resourceGroup().id)))]",
    "ataStorageName": "[tolower(concat('ata', uniqueString(resourceGroup().id)))]",
    "c2StorageName": "[tolower(concat('c2', uniqueString(resourceGroup().id)))]",
    "vm1StorageName": "[tolower(concat('vm1', uniqueString(resourceGroup().id)))]",
    "vm2StorageName": "[tolower(concat('vm2', uniqueString(resourceGroup().id)))]",
    "dnsPrefix": "[tolower(concat(resourceGroup().name,'dc'))]",
    "adVmDeployment": "CreateADVMs",
    "adVmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('adVmDeployment'))]",
    "adPDCVMName": "[substring(concat('DC1',resourceGroup().Name),0,5)]",
    "dc2VmDeployment": "CreateDC2VMs",
    "dc2VmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('dc2VmDeployment'))]",
    "dc2BDCVMName": "[substring(concat('DC2',resourceGroup().Name),0,5)]",
    "ataVMName": "[substring(concat('ATA',resourceGroup().Name),0,5)]",
    "c2VMName": "[substring(concat('C2',resourceGroup().Name),0,5)]",
    "vm1VMName": "[substring(concat('VM1',resourceGroup().Name),0,5)]",
    "vm2VMName": "[substring(concat('VM2',resourceGroup().Name),0,5)]",
    "deployPrimaryAdTemplateURL": "[concat(variables('assetLocation'),'/data/deployPrimaryAD.json')]",
    "deployDC2AdTemplateURL": "[concat(variables('assetLocation'),'/data/deployDC2AD.json')]",
    "deployOUsandUsersTemplateURL": "[concat(variables('assetLocation'),'/data/deployOUsandUsersviaDSC.json')]",
    "deployOUsandUsersviaScriptTemplateURL": "[concat(variables('assetLocation'),'/data/deployOUsandUsersviaScript.json')]",
    "deployLab1viaScriptTemplateURL": "[concat(variables('assetLocation'),'/data/deployLab1viaScript.json')]",
    "deployLabviaKeyvaultTemplateURL": "[concat(variables('assetLocation'),'/data/deployLabviaKeyvault.json')]",
    "deployPrimaryAd": "ConfigureAD",
    "deployPrimaryAdId": "[concat('Microsoft.Resources/deployments/', variables('deployPrimaryAd'))]",
    "deployDC2Ad": "ConfigureADDC2",
    "deployDC2AdId": "[concat('Microsoft.Resources/deployments/', variables('deployDC2Ad'))]",
    "updateVNetDNS1": "UpdateVNetDNS",
    "vnetwithDNSTemplateURL": "[concat(variables('assetLocation'),'/data/vnet-with-dns-server.json')]",
    "publicLBName": "[concat('ADPLB',resourceGroup().name)]",
    "publicIPAddressName": "[concat('ADlbPublicIP',resourceGroup().name)]",
    "lbFE": "[concat('ADLBFE',resourceGroup().name)]",
    "rpdNAT": "[concat('ADRDPNAT',resourceGroup().name)]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "publiclbID": "[resourceId('Microsoft.Network/loadBalancers',variables('publicLBName'))]",
    "publiclbFEConfigID": "[concat(variables('publiclbID'),'/frontendIPConfigurations/',variables('lbFE'))]",
    "rdpPort": 3389,
    "adRDPNATRuleID": "[concat(variables('publiclbID'),'/inboundNatRules/',variables('rpdNAT'))]",
    "nsgName": "[concat('ADNsg',resourceGroup().name)]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "adNICName": "[concat('ADNic',resourceGroup().name)]",
    "dc2NICName": "[concat('DC2Nic',resourceGroup().name)]",
    "ataNICName": "[concat('ATANic',resourceGroup().name)]",
    "c2NICName": "[concat('C2Nic',resourceGroup().name)]",
    "vm1NICName": "[concat('VM1Nic',resourceGroup().name)]",
    "vm2NICName": "[concat('VM2Nic',resourceGroup().name)]",
    "staticSubnetName": "[concat('ADStaticSubnet',resourceGroup().name)]",
    "virtualNetworkName": "[concat('ADVNET',resourceGroup().name)]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "staticSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('staticSubnetName'))]",
    "ataVmDeployment": "CreateATAVM",
    "ataVmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('ataVmDeployment'))]",
    "c2VmDeployment": "CreateC2VM",
    "c2VmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('c2VmDeployment'))]",
    "vm1VmDeployment": "CreateVM1VM",
    "vm1VmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('vm1VmDeployment'))]",
    "vm2VmDeployment": "CreateVM2VM",
    "vm2VmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('vm2VmDeployment'))]",
    "ouandusersDeployment": "deployOUsandUserAccounts",
    "ouandusersDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('ouandusersDeployment'))]",
    "ouandusersviaScriptDeployment": "deployOUsandUserAccountsviaScript",
    "ouandusersviaScriptDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('ouandusersviaScriptDeployment'))]",
    "lab1viaScriptDeployment": "deployLab1viaScript",
    "lab1viaScriptDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('lab1viaScriptDeployment'))]",
    "lab1viaKeyvaultDeployment": "deployLabviaKeyvault",
    "lab1viaKeyvaultDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('lab1viaKeyvaultDeployment'))]",
    "vaultName": "CRSecrets",
    "secretName": "crlabkey2",
    "KeyVaultRG": "/resourceGroups/Storage",
    "subnets": [
      {
        "name": "[variables('staticSubnetName')]",
        "properties": {
          "addressPrefix": "[variables('vmNetworkSubnet')]",
          "networkSecurityGroup": {
            "id": "[variables('nsgID')]"
          }
        }
      }
    ]
  },
  "resources": [
    {
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-06-15",
      "properties": {
        "securityRules": [
          {
            "name": "rule1",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "[parameters('sourceClientIP')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[variables('nsgID')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('virtualNetworkAddressRange')]"
          ],
          "networkSecurityGroup": {
            "id": "[variables('nsgID')]"
          }
        },
        "subnets": "[variables('subnets')]"
      }
    },
    {
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsPrefix')]"
        }
      }
    },
    {
      "name": "[variables('publiclbName')]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[variables('publicIPAddressID')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbFE')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "inboundNatRules": [
          {
            "name": "[variables('rpdNAT')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('publiclbFEConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": "[variables('rdpPort')]",
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "name": "[variables('adVmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('publiclbID')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('adTemplateURLCloud')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adRDPNATRuleID": {
            "value": "[variables('adRDPNATRuleID')]"
          },
          "storageAccount": {
            "value": "[variables('adStorageName')]"
          },
          "subnetResourceID": {
            "value": "[variables('staticSubnetID')]"
          },
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          },
          "windowsImageSKU": {
            "value": "[variables('adOSVersion')]"
          },
          "vmName": {
            "value": "[variables('adPDCVMName')]"
          },
          "vmSize": {
            "value": "[variables('adVMSize')]"
          },
          "adDNicName": {
            "value": "[variables('adNICName')]"
          },
          "primaryAdIpAddress": {
            "value": "[variables('primaryAdIpAddress')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployPrimaryAd')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('adVmDeploymentId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployPrimaryAdTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "primaryADName": {
            "value": "[variables('adPDCVMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocation": {
            "value": "[variables('assetLocation')]"
          }
        }
      }
    },
    {
      "name": "[variables('updateVNetDNS1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployPrimaryAdId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetwithDNSTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "dnsServerAddress": {
            "value": [ "[variables('primaryAdIpAddress')]" ]
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('deployDC2'),'Yes')]",
      "name": "[variables('dc2VmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('updateVNetDNS1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('dc2TemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('staticSubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('dc2OSVersion')]"
          },
          "vmName": {
            "value": "[variables('dc2BDCVMName')]"
          },
          "vmSize": {
            "value": "[variables('adVMSize')]"
          },
          "NicName": {
            "value": "[variables('dc2NICName')]"
          },
          "assetLocation": {
            "value": "[variables('assetLocation')]"
          },
          "primaryIpAddress": {
            "value": "[variables('primaryDC2IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('deployATA'),'Yes')]",
      "name": "[variables('ataVmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployPrimaryAdId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('ataTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccount": {
            "value": "[variables('ataStorageName')]"
          },
          "subnetResourceID": {
            "value": "[variables('staticSubnetID')]"
          },
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          },
          "windowsImageSKU": {
            "value": "[variables('ataOSVersion')]"
          },
          "vmName": {
            "value": "[variables('ataVMName')]"
          },
          "vmSize": {
            "value": "[variables('adVMSize')]"
          },
          "adDNicName": {
            "value": "[variables('ataNICName')]"
          },
          "primaryAdIpAddress": {
            "value": "[variables('primaryATAIpAddress')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('deployC2'),'Yes')]",
      "name": "[variables('c2VmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployPrimaryAdId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('c2TemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccount": {
            "value": "[variables('c2StorageName')]"
          },
          "subnetResourceID": {
            "value": "[variables('staticSubnetID')]"
          },
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          },
          "windowsImageSKU": {
            "value": "[variables('c2OSVersion')]"
          },
          "vmName": {
            "value": "[variables('c2VMName')]"
          },
          "vmSize": {
            "value": "[variables('adVMSize')]"
          },
          "adDNicName": {
            "value": "[variables('c2NICName')]"
          },
          "primaryAdIpAddress": {
            "value": "[variables('primaryC2IpAddress')]"
          },
          "assetLocation": {
            "value": "[variables('assetLocation')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('deployVM1'),'Yes')]",
      "name": "[variables('vm1VmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployPrimaryAdId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vm1TemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccount": {
            "value": "[variables('vm1StorageName')]"
          },
          "subnetResourceID": {
            "value": "[variables('staticSubnetID')]"
          },
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          },
          "windowsImageSKU": {
            "value": "[variables('vm1OSVersion')]"
          },
          "vmName": {
            "value": "[variables('vm1VMName')]"
          },
          "vmSize": {
            "value": "[variables('adVMSize')]"
          },
          "adDNicName": {
            "value": "[variables('vm1NICName')]"
          },
          "primaryAdIpAddress": {
            "value": "[variables('primaryVM1IpAddress')]"
          },
          "assetLocation": {
            "value": "[variables('assetLocation')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('deployVM2'),'Yes')]",
      "name": "[variables('vm2VmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployPrimaryAdId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vm2TemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccount": {
            "value": "[variables('vm2StorageName')]"
          },
          "subnetResourceID": {
            "value": "[variables('staticSubnetID')]"
          },
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          },
          "windowsImageSKU": {
            "value": "[variables('vm2OSVersion')]"
          },
          "vmName": {
            "value": "[variables('vm2VMName')]"
          },
          "vmSize": {
            "value": "[variables('adVMSize')]"
          },
          "adDNicName": {
            "value": "[variables('vm2NICName')]"
          },
          "primaryAdIpAddress": {
            "value": "[variables('primaryVM2IpAddress')]"
          },
          "assetLocation": {
            "value": "[variables('assetLocation')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('deployOUandUsersviaDSC'),'Yes')]",
      "comments": "deploy OUs and User accounts via DSC extension",
      "name": "[variables('ouandusersDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployPrimaryAdId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployOUsandUsersTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "primaryADName": {
            "value": "[variables('adPDCVMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocation": {
            "value": "[variables('assetLocation')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('deployOUandUsersviaScript'),'Yes')]",
      "comments": "deploy OUs and User accounts via Script extension",
      "name": "[variables('ouandusersviaScriptDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployPrimaryAdId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployOUsandUsersviaScriptTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "primaryADName": {
            "value": "[variables('adPDCVMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocation": {
            "value": "[variables('assetLocation')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('deployLab1ViaScript'),'Yes')]",
      "comments": "deploy Lab1 via Script extension",
      "name": "[variables('lab1viaScriptDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployPrimaryAdId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployLab1viaScriptTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "primaryADName": {
            "value": "[variables('adPDCVMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKey": {
            "value": "[parameters('storageAccountKey')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('deployLabviaKeyvault'),'Yes')]",
      "comments": "deploy Lab1 via Script extension using Keyvault to obtain the data",
      "name": "[variables('lab1viaKeyvaultDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('deployPrimaryAdId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployLabviaKeyvaultTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "primaryADName": {
            "value": "[variables('adPDCVMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[concat(subscription().id, variables('KeyVaultRG'), '/providers/Microsoft.KeyVault/vaults/', variables('vaultName'))]"
              },
              "secretName": "[variables('secretName')]"
            }
          }
        }
      }
    }
  ],
  "outputs": {}
}
